ALTER TABLE LIVESCREEN.MEDIA_CONTENT
 DROP PRIMARY KEY CASCADE;

DROP TABLE LIVESCREEN.MEDIA_CONTENT CASCADE CONSTRAINTS;

CREATE TABLE LIVESCREEN.MEDIA_CONTENT
(
  SEQ_ID          NUMBER                        NOT NULL,
  DOWNLOAD_ID     VARCHAR2(200 CHAR),
  MEDIA_NAME      VARCHAR2(200 CHAR),
  FILE_NAME       VARCHAR2(200 CHAR),
  FILE_PATH       VARCHAR2(2000 CHAR),
  UPLOADED_TIME   DATE,
  MEDIA_TYPE      VARCHAR2(20 CHAR),
  UPLOADED_BY     VARCHAR2(20 BYTE),
  WAP_LINK        VARCHAR2(2000 BYTE),
  DOWNLOAD_COUNT  NUMBER(5),
  FILE_TYPE       VARCHAR2(20 BYTE)
)
TABLESPACE USERS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX LIVESCREEN.MEDIA_CONTENT_PK ON LIVESCREEN.MEDIA_CONTENT
(SEQ_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER LIVESCREEN.MEDIA_CONTENT_TRG 
BEFORE INSERT ON LIVESCREEN.MEDIA_CONTENT 
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SEQ_ID IS NULL THEN
      SELECT MEDIA_CONTENT_SEQ.NEXTVAL INTO :NEW.SEQ_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


ALTER TABLE LIVESCREEN.MEDIA_CONTENT ADD (
  CONSTRAINT MEDIA_CONTENT_PK
  PRIMARY KEY
  (SEQ_ID)
  USING INDEX LIVESCREEN.MEDIA_CONTENT_PK
  ENABLE VALIDATE);
