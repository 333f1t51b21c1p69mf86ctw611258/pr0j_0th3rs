ALTER TABLE LIVESCREEN.PLSQL_PROFILER_RUNS
 DROP PRIMARY KEY CASCADE;

DROP TABLE LIVESCREEN.PLSQL_PROFILER_RUNS CASCADE CONSTRAINTS;

CREATE TABLE LIVESCREEN.PLSQL_PROFILER_RUNS
(
  RUNID            NUMBER                       NOT NULL,
  RELATED_RUN      NUMBER,
  RUN_OWNER        VARCHAR2(32 BYTE),
  RUN_DATE         DATE,
  RUN_COMMENT      VARCHAR2(2047 BYTE),
  RUN_TOTAL_TIME   NUMBER,
  RUN_SYSTEM_INFO  VARCHAR2(2047 BYTE),
  RUN_COMMENT1     VARCHAR2(2047 BYTE),
  SPARE1           VARCHAR2(256 BYTE)
)
TABLESPACE USERS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE LIVESCREEN.PLSQL_PROFILER_RUNS IS 'Run-specific information for the PL/SQL profiler';



CREATE UNIQUE INDEX LIVESCREEN.PK_PLSQL_PROFILER_RUNS ON LIVESCREEN.PLSQL_PROFILER_RUNS
(RUNID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER LIVESCREEN.PLSQL_PROFILER_RUN_OWNER_TRG BEFORE INSERT OR UPDATE OF run_owner ON LIVESCREEN.PLSQL_PROFILER_RUNS FOR EACH ROW
WHEN (
new.run_owner IS NULL
      )
BEGIN :new.run_owner := user; END;
/


CREATE OR REPLACE PUBLIC SYNONYM PLSQL_PROFILER_RUNS FOR LIVESCREEN.PLSQL_PROFILER_RUNS;


ALTER TABLE LIVESCREEN.PLSQL_PROFILER_RUNS ADD (
  PRIMARY KEY
  (RUNID)
  USING INDEX LIVESCREEN.PK_PLSQL_PROFILER_RUNS
  ENABLE VALIDATE);
