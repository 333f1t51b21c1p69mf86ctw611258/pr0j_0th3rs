ALTER TABLE LIVESCREEN.ALERT_MESSAGE
 DROP PRIMARY KEY CASCADE;

DROP TABLE LIVESCREEN.ALERT_MESSAGE CASCADE CONSTRAINTS;

CREATE TABLE LIVESCREEN.ALERT_MESSAGE
(
  ID            NUMBER(15)                      NOT NULL,
  STATUS        VARCHAR2(1 CHAR),
  CONTENT       VARCHAR2(2000 BYTE),
  CREATED_USER  VARCHAR2(100 BYTE),
  CREATED_TIME  DATE,
  LEVEL_ID      NUMBER(30),
  TYPE          NUMBER(10)                      DEFAULT 2
)
TABLESPACE USERS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN LIVESCREEN.ALERT_MESSAGE.STATUS IS '0: inactive; 1:active';



CREATE UNIQUE INDEX LIVESCREEN.ALERT_MESSAGE_PK ON LIVESCREEN.ALERT_MESSAGE
(ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER LIVESCREEN.ALERT_MESSAGE_TRG 
 BEFORE
  INSERT
 ON LIVESCREEN.ALERT_MESSAGE
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
BEGIN
  SELECT ALERT_MESSAGE_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/


CREATE OR REPLACE PUBLIC SYNONYM ALERT_MESSAGE FOR LIVESCREEN.ALERT_MESSAGE;


ALTER TABLE LIVESCREEN.ALERT_MESSAGE ADD (
  CONSTRAINT ALERT_MESSAGE_PK
  PRIMARY KEY
  (ID)
  USING INDEX LIVESCREEN.ALERT_MESSAGE_PK
  ENABLE VALIDATE);
