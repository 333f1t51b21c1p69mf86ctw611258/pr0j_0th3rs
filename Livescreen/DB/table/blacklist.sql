ALTER TABLE LIVESCREEN.BLACKLIST
 DROP PRIMARY KEY CASCADE;

DROP TABLE LIVESCREEN.BLACKLIST CASCADE CONSTRAINTS;

CREATE TABLE LIVESCREEN.BLACKLIST
(
  ID              NUMBER                        NOT NULL,
  MSISDN          VARCHAR2(20 BYTE),
  ACTION          VARCHAR2(20 BYTE),
  UPDATE_TIME     DATE,
  PROCESS_STATUS  VARCHAR2(50 BYTE),
  PROCESS_DETAIL  VARCHAR2(1000 BYTE)
)
TABLESPACE USERS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN LIVESCREEN.BLACKLIST.ACTION IS 'INSERT, DELETE, UPDATE';



CREATE UNIQUE INDEX LIVESCREEN.PRIMARY_IDX ON LIVESCREEN.BLACKLIST
(ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER LIVESCREEN.BLACKLIST_TRG 
 BEFORE
  INSERT
 ON LIVESCREEN.BLACKLIST
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
BEGIN
  SELECT BLACKLIST_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/


CREATE OR REPLACE PUBLIC SYNONYM BLACKLIST FOR LIVESCREEN.BLACKLIST;


ALTER TABLE LIVESCREEN.BLACKLIST ADD (
  CONSTRAINT PRIMARY_IDX
  PRIMARY KEY
  (ID)
  USING INDEX LIVESCREEN.PRIMARY_IDX
  ENABLE VALIDATE);
